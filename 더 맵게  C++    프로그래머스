#include <string>
#include <vector>
#include <queue> 

using namespace std; 

int solution(vector<int> scoville, int K) {
    int answer = 0;
    int s1, s2;
    int find1 = -1;
    int res, count = 0;
    priority_queue<int, vector<int>, greater<int>> pq;
    for(int i = 0; i < scoville.size(); i++)
    {
        pq.push(scoville[i]);//우선순위 pq에 스코빌지수를 집어넣음
    }
    while(!pq.empty())//pq가 비어있지 않으면 반복시킴
    {
        s1 = pq.top();//s1에 pq의 첫번째 수 반환
        pq.pop();
        if(s1 >= K)//s1이 K보다 크면 find1에 1을 집어넣고 반복문 멈춤
        {
            find1 = 1;
            break;
        }
        else
        {
            if(pq.size() > 0)//pq에 원소가 있을 경우
            {
                s2 = pq.top();
                pq.pop();
                res = s1 + s2 * 2;//새로운 음식의 스코빌지수를 구함
                pq.push(res);//구한 res를 pq에 집어넣음
                count++;//count 1증가시킴
            }
        }
    }
    if(find1 == 1)//pq에 원소가 남아있을 때 스코빌지수가 K를 넘을경우
        answer = count;
    else//pq에 원소가 남아있을 때 스코빌지수가 K를 넘지 못 할 경우
        answer = -1;
    return answer;
}
