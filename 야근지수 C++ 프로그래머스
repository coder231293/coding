#include <string>
#include <vector>
#include <algorithm>
#include <functional>
#include <cmath>
#include <queue> 

using namespace std;
long long solution(int n, vector<int> works) {
    long long answer = 0;//야근지수를 저장하는 정수형 변수
    priority_queue< int, vector<int>, less<int>> pq;
    //큰 수 순서대로 저장하는 우선순위 큐 pq생성
    int x = pq.top();//x에 큐pq의 맨앞 원소 반환
    for(int i = 0; i< works.size(); i++)
    { 
        pq.push(works[i]);//pq에 works[i] 초기화시킴
    }
    for(int i = 0; i < n; i++)
    {
        if(pq.top() == 0)//큐pq의 첫번째로 반환가 0인경우
            return 0;
        x = pq.top();
        x--;//pq.top()의 원소를 1씩 감소시킴
        pq.pop();//감소시킨 이후에 감소시키기 이전의 수를 pop시킴 
        pq.push(x);//1씩 감소시킨 그 원소를 다시 pq큐에 push시킴
    }
    for(int i = 0; i < works.size(); i++)
    {
          if(works[i] > 0)//works[i]의 값이 0인 경우에만 야근지수를 구함
          {
             x = pq.top();//큐pq의 맨 앞 요소 반환
             answer += pow(x, 2);//공식에 따라 x의 제곱을 구하기 위해 pow함수사용
             pq.pop();//큐pq의 맨 앞 원소 빼기
          }
    }
    return answer;
}
