import java.util.*; 
class Solution 
{ 
    int answer = 0; 
    public int solution(int n, String[] data) 
    { 
        char[] kakaoFriends = {'A', 'C', 'F', 'N', 'M', 'J', 'R', 'T'};//문자열 형태로 카카오프렌즈 초기화
        cal(data, kakaoFriends, 0, kakaoFriends.length);
        return answer;
    } 
    public void cal(String[] data, char[] kakaoFriends, int depth, int n)//dfs알고리즘을 이용하여 모든 경우의 수를 구하는 함수
    { 
        if(depth == n)//dfs알고리즘 깊이가 n인 경우
        { 
            String friends = new String(kakaoFriends); 
            if(check(friends, data))
            { 
                answer++; 
            } 
            return; 
        } 
        for(int i = depth; i < n; ++i)
        { 
            //어느 경우를 계산한 경우 swap함수를 이용하여 다음 경우의 수로 넘어감
            swap(kakaoFriends, i, depth); 
            cal(data, kakaoFriends, depth+1, n); 
            swap(kakaoFriends, i, depth); 
        } 
    } 
    public void swap(char[] kakaoFriends, int i, int depth)//두 데이터를 서로 바꿔주는 함수
    { 
        char temp = kakaoFriends[i]; 
        kakaoFriends[i] = kakaoFriends[depth]; 
        kakaoFriends[depth] = temp; 
    } 
    public boolean check(String friends, String[] data)
    { 
        for(String a : data)
        { 
            int first = friends.indexOf(a.charAt(0)+"");//first에 첫번째 친구 인덱스 초기화
            int second = friends.indexOf(a.charAt(2)+"");//fsecond에 두번째 친구 인덱스 초기화
            int diff = Math.abs(first - second) - 1;//두 친구 사이의 거리 초기화
            int bigyo = a.charAt(4) - '0';//diff와 비교하는 수를 bigyo에 초기화
            if(a.charAt(3) == '=')
            { 
                if( !(diff == bigyo))//두 친구 사이의 거리가 a의 4번째 수랑 다른경우
                { 
                    return false; 
                }
            } 
            if(a.charAt(3) == '>')
            { 
                if(!(diff > bigyo))//두 친구 사이의 거리가 a의 4번째 수보다 크지 않은 경우
                { 
                    return false; 
                } 
            } 
            if(a.charAt(3) == '<')
            { 
                if(!(diff < bigyo))//두 친구 사이의 거리가 a의 4번째 수보다 작지 않은 경우
                { 
                    return false; 
                } 
            } 
        } 
        return true; 
    } 
}
